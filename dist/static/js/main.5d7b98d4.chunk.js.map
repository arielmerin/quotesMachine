{"version":3,"sources":["Author.js","RefreshButton.js","QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["Author","autor","className","RefreshButton","cambiarFrase","onClick","QuoteBox","frases","useState","quote","currentQuote","author","currentAuthor","setCurrentAuthor","rndPosition","Math","floor","random","length","console","log","App","quotes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k9YAWeA,EATA,SAAC,GAAY,IAAXC,EAAU,EAAVA,MACb,OAEI,qBAAKC,UAAU,mBAAf,SACI,oCAAOD,QCQJE,EAXO,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAIpB,OACI,wBAAQC,QAASD,EAAcF,UAAU,UAAzC,yBCwBOI,EAxBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAGf,EAAuCC,mBAASD,EAAO,GAAGE,OAA1D,mBAAMC,EAAN,KACA,GADA,KACyCF,mBAASD,EAAO,GAAGI,SAA5D,mBAAMC,EAAN,KAAqBC,EAArB,KASA,OACI,sBAAKX,UAAU,kBAAf,UACI,mCAAMQ,EAAN,OACA,sBAAKR,UAAU,oBAAf,UACI,4BAAG,cAAC,EAAD,CAAQD,MAAQW,MACnB,cAAE,EAAF,CAAgBR,aAZJ,WACpB,IAAIU,EAAcC,KAAKC,MAAMD,KAAKE,SAASV,EAAOW,QACpCX,EAAOO,GAErBD,IACAM,QAAQC,IAAI,8B,OCJLC,MAXf,WAGI,OAFAF,QAAQC,IAAI,aACZD,QAAQC,IAAIE,EAAOA,OAAO,IAG1B,qBAAKpB,UAAU,MAAf,SACE,cAAE,EAAF,CAAWK,OAAQe,EAAOA,YCEjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d7b98d4.chunk.js","sourcesContent":["\nimport \"./assets/css/styles.css\"\nconst Author = ({autor}) =>{\n    return (\n\n        <div className=\"author-container\">\n            <i>By {autor}</i>\n        </div>\n    )\n}\n\nexport default Author;","import \"./assets/css/styles.css\"\n\n\nconst RefreshButton = ({cambiarFrase}) =>{\n\n\n    const refreshPage = ()=> window.location.reload();\n    return(\n        <button onClick={cambiarFrase} className=\"button \">\n            Otra frase\n        </button>\n    );\n}\n\nexport default RefreshButton;","import \"./assets/css/styles.css\"\n\nimport { useState} from \"react\"\nimport Author from \"./Author\";\nimport RefreshButton from \"./RefreshButton\";\n\n\n\nconst QuoteBox = ({frases}) =>{\n\n\n    const[currentQuote, setCurrentQuote] = useState(frases[0].quote);\n    const[currentAuthor, setCurrentAuthor] = useState(frases[0].author)\n\n    const frasesAletoreas = () =>{\n        let rndPosition = Math.floor(Math.random()*frases.length);\n        let initial = frases[rndPosition];\n\n        setCurrentAuthor()\n        console.log('Ya me ejecut√©')\n    }\n    return(\n        <div className=\"quote-container\">\n            <h3>\"{currentQuote}\"</h3>\n            <div className=\"buttons-container\">\n                <p><Author autor= {currentAuthor} /></p>\n                < RefreshButton cambiarFrase={frasesAletoreas} />\n            </div>\n        </div>\n    );\n}\n\nexport default QuoteBox;\n","import './App.css';\nimport QuoteBox from \"./QuoteBox\";\nimport quotes from \"./assets/quotes.json\";\n\nfunction App() {\n    console.log(\"ola mundo\")\n    console.log(quotes.quotes[0])\n    return (\n\n    <div className=\"App\">\n      < QuoteBox frases={quotes.quotes}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}